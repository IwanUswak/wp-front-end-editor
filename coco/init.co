get_group_button = ($container) ->
	$button = $container.find '.fee-edit-button'
	if $button.length
		return $button

	if FrontEndEditor.data.add_buttons
		$button = jQuery '<span>', {
			class: 'fee-edit-button'
			text: FrontEndEditor.data.edit_text
		}

		$button.appendTo $container

		return $button

	return false

jQuery ->

	# Text widget fields hack
	for el of jQuery('[data-filter="widget_title"], [data-filter="widget_text"]')
		$el = jQuery(el)
		$widget = $el.closest('.widget_text')

		if $widget.length
			$el.attr('data-widget_id', $widget.attr('id'))
			$widget.addClass('fee-group')
		else
			$el.unwrap()

	# Create group instances
	for el of jQuery('.fee-group')
		$container = jQuery(el)
		$elements = $container.find('.fee-field').removeClass('fee-field')

		if !$elements.length
			return

		editors = (FrontEndEditor.make_editable(el) for el of $elements)

		fieldType = if $container.hasClass 'status-auto-draft' then 'createPost' else 'group'

		editor = new FrontEndEditor.fieldTypes[fieldType] $container, editors

		$button = get_group_button $container

		if $button
			$button.click editor.~start_editing

			$container.bind {
				edit_start: (ev) ->
					$button.addClass 'fee-disabled'
					ev.stopPropagation()

				edit_stop: (ev) ->
					$button.removeClass 'fee-disabled'
					ev.stopPropagation()
			}
		else
			FrontEndEditor.hover_init $container, editor.~start_editing

		$container.data 'fee-editor', editor

	# Create field instances
	for el of jQuery('.fee-field')
		FrontEndEditor.make_editable el, true

jQuery(window).load ->
	# Automatically start editing the first auto-draft
	jQuery('.fee-group.status-auto-draft').data('fee-editor')?.start_editing()
